Що це за скрипт

Node-бот на Puppeteer (+stealth), який:

логіниться в Instagram, під’єднує Threads,

публікує тред (із текстом, що може згенерувати OpenAI),

шукає підприємців і підписується/лайкає,

сканує фід і лишає доречні короткі коментарі, згенеровані OpenAI,

зберігає/читає cookies, працює headless/non-headless, має антиспам-обмеження.

Конфіг та CLI

ENV: IG_USER/IG_PASS, OPENAI_API_KEY, опційно IG_OTP, HEADLESS, OPENAI_MODEL. Без логіна/пароля — вихід із помилкою.

CLI-параметри (yargs): action (post | find-entrepreneurs | feed-scan | skip-suggestions), type посту (story|tip|news|humor), text, image, таймаути, headless, otp, ліміти для підписок/коментарів/скролів тощо.

Авторизація й перехід у Threads

loginInstagram(page): відкриває форму логіну, вводить IG_USER/IG_PASS, обробляє 2FA (через argv.otp або очікує ручне введення), проходить екрани “Save info/Turn on Notifications”.

continueWithInstagramOnThreads(page): переходить на threads.net, тицяє “Continue with Instagram”, за потреби обирає акаунт на екрані “Continue to Threads” (спершу спроба по тексту логіна; якщо ні — CoachAgent-план), клікає Not now/Continue/Allow і перевіряє, що ми в Threads.

isThreadsAuthed(page) допомагає визначити, чи ми вже авторизовані у Threads.

Робота з композером і публікація

openComposer(page): відкриває вікно створення поста через плитку “What’s new?” або кнопку “New thread”, чекає діалог.

fillAndPost(page, text): знаходить поле введення (contenteditable/textarea), друкує текст “як людина”, натискає Post (або Ctrl/Cmd+Enter), хендлить діалог “Save to drafts?”, чекає підтвердження публікації. Якщо елементи не знайдені — просить CoachAgent-план і виконує його.

waitAndClickActivePost(...): опитує активну кнопку “Post” в діалозі, не клікає по disabled.

attachImageIfAny(...): додає зображення (file chooser або пряме завантаження у input[type=file]).

Допоміжна активність у фіді

likeVisiblePosts(...): ставить лайки по різних селекторах (кнопки/aria-label “Like” або SVG), скролить між ітераціями.

extractCurrentPostText(...): дістає чистий текст поста (без HTML) з поточного діалога/сторінки, має жорстке обрізання до 2000 символів.

Інтеграція з OpenAI (генерація коротких коментарів)

generateSmartCommentForPost(postText, seedKeyword): запит до OpenAI з системними правилами (українська, 1–2 речення, без кліше, до 220 символів); логгує запит/відповідь; на фейлі повертає null.

Підрахунок серійності “поради”

tipSerialNumber(date): рахує порядковий № порад від 1 вересня 2025 (№1 у цей день), залежно від дати запуску. Використовується для префіксу постів типу tip.

Пошук і взаємодія з аудиторією

openSearch / typeSearchQuery: відкриває пошук у Threads, заповнює і запускає запит.

openFirstProfileFromResults → followOnProfileAndLikeSome: відкриває перший профіль із результатів, підписується й лайкає 3–4 пости.

commentOnSomePosts(...): відкриває пости, витягує їхній текст, генерує короткий розумний коментар (або бере з банку), публікує, закриває пост.

Довгий скрол фіду з автокоментами за ключовими словами

feedScanAndComment(...): прокручує фід, відкриває нові пости (уникає вже бачених), шукає в тексті бізнес-ключові слова (з двох списків), генерує 1 короткий релевантний коментар і публікує. Ліміт на кількість коментарів і глибину скролу задається через CLI.

scrollPastSuggestionsIfPresent(...): якщо бачить блок із масовими рекомендаціями, скролить повз нього (щоб не “затисало” на рекомендаціях).

Основні сценарії (екшени)

post:

відкриває композер;

формує текст: або бере argv.text, або генерує через OpenAI за типом (tip/news/humor/...). Для tip додає обов’язковий префікс із номером дня; для news — сувора логіка “NEED_SOURCE → повторний запит” і вимога джерела+дати в дужках; усе ріже до 420 символів;

додає фото (якщо --image);

постить;

робить кілька скролів і лайків “для нативної активності”.

find-entrepreneurs: запускає пошук по перетасованим keywords (3–6), заходить у профіль, підписується + лайкає 3–4 пости; м’який ліміт підписок за виклик — 3–4 (CLI --maxFollows).

feed-scan: відкриває головну і запускає feedScanAndComment з параметрами scanScrolls та commentMax.

skip-suggestions: якщо бачить секцію рекомендацій — автоматично прокручує нижче.

Головний потік виконання

Запускає браузер (uk-UA, no-sandbox), створює сторінку.

Пробує підвантажити cookies_instagram.json. Якщо сесії нема — логіниться, зберігає cookies.

Переходить/зв’язується з Threads.

Виконує обраний action.

На завершення закриває браузер. У разі помилки — лог і скріншот error_*.png.

Антиспам та надійність

Обмеження підписок за виклик (дефолт 3, максимум м’яко зрізається до 4).

Коментарі короткі (≤220 символів), релевантні, українською, без кліше; текст постів і для публікації/новин жорстко обрізаються до 420 символів, tip має фірмовий префікс.

Багато “fall-back’ів”: альтернативні селектори, ручні гарячі клавіші для Post, CoachAgent-плани при DOM-збоях.